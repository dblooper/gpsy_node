[{"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reportWebVitals.js":"1","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/App.js":"2","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/index.js":"3","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/table/TableSuper.js":"4","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/avatar/Avatar.js":"5","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/stepper/CustomStepper.js":"6","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/drawer/SideDrawer.js":"7","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/navbar/Navbar.js":"8","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/grid/Grid.js":"9","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/switcher/Switcher.js":"10","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/HorizontalList.js":"11","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/TrackItem.js":"12","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/chart/Doughnut.js":"13","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/popper/Popper.js":"14","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/Dashboard.js":"15","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/Login.js":"16","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/ProgressBar.js":"17","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/register/Register.js":"18"},{"size":362,"mtime":1610058670026,"results":"19","hashOfConfig":"20"},{"size":444,"mtime":1611095729421,"results":"21","hashOfConfig":"20"},{"size":920,"mtime":1610655814780,"results":"22","hashOfConfig":"20"},{"size":11201,"mtime":1610654215706,"results":"23","hashOfConfig":"20"},{"size":835,"mtime":1610190925055,"results":"24","hashOfConfig":"20"},{"size":3401,"mtime":1610666280556,"results":"25","hashOfConfig":"20"},{"size":5102,"mtime":1610666299820,"results":"26","hashOfConfig":"20"},{"size":7333,"mtime":1610728381540,"results":"27","hashOfConfig":"20"},{"size":4076,"mtime":1610665977606,"results":"28","hashOfConfig":"20"},{"size":2106,"mtime":1610728925670,"results":"29","hashOfConfig":"20"},{"size":816,"mtime":1610493847913,"results":"30","hashOfConfig":"20"},{"size":1138,"mtime":1610656785887,"results":"31","hashOfConfig":"20"},{"size":1863,"mtime":1610665909845,"results":"32","hashOfConfig":"20"},{"size":5899,"mtime":1610665037250,"results":"33","hashOfConfig":"20"},{"size":1139,"mtime":1610728406707,"results":"34","hashOfConfig":"20"},{"size":2724,"mtime":1611099890599,"results":"35","hashOfConfig":"20"},{"size":450,"mtime":1611096925482,"results":"36","hashOfConfig":"20"},{"size":2979,"mtime":1611101026693,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"tcckm7",{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"40"},"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reportWebVitals.js",[],["90","91"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/App.js",["92"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/index.js",["93"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/table/TableSuper.js",["94","95","96"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport Switcher from '../components/switcher/Switcher.js'\n\nfunction createData(name, author, lastPlayed, popularity) {\n  return { name,author, lastPlayed, popularity };\n}\n\nconst rows = [\n  createData('sohfiasadsadsaddsfdsfdsfdfasdasdsadasdsadsd sdfsdfasshfgiph', \"sohfiasadsaad fssadfdsadsdasshfgiph\", new Date().toISOString().replace(/[ZT]/g, ' ').slice(0,19), 67),\n  createData('Donut', 452, 25.0, 51, 4.9),\n  createData('Eclair', 262, 16.0, 24, 6.0),\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\n  createData('Honeycomb', 408, 3.2, 87, 6.5),\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  createData('Jelly Bean', 375, 0.0, 94, 0.0),\n  createData('KitKat', 518, 26.0, 65, 7.0),\n  createData('Lollipop', 392, 0.2, 98, 0.0),\n  createData('Marshmallow', 318, 0, 81, 2.0),\n  createData('Nougat', 360, 19.0, 9, 37.0),\n  createData('Oreo', 437, 18.0, 63, 4.0),\n];\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Nazwa' },\n  { id: 'author', numeric: false, disablePadding: false, label: 'Autor' },\n  { id: 'lastPlayed', numeric: false, disablePadding: false, label: 'Data i czas' },\n  { id: 'popularity', numeric: false, disablePadding: false, label: 'Odtworzono ogółem' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'none'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            \n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              \n            >\n              <p style={{width: headCell.id === 'popularity' ? '5rem' : '6rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}</p>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} zaznaczone\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Ostatnio Odtwarzane\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        null\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    height: '90%',\n    display: 'block',\n    textAlign: 'center',\n    margin: theme.spacing(1)\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function TableSuper() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const trackTable = (        \n  <TableContainer style={{overflow: 'scroll', height: '80%'}}>\n  <Table\n    className={classes.table}\n    aria-labelledby=\"tableTitle\"\n    size='small'\n    aria-label=\"enhanced table\"\n    stickyHeader\n    style={{tableLayout: 'auto'}}\n  >\n    <EnhancedTableHead\n      classes={classes}\n      numSelected={selected.length}\n      order={order}\n      orderBy={orderBy}\n      onSelectAllClick={handleSelectAllClick}\n      onRequestSort={handleRequestSort}\n      rowCount={rows.length}\n    />\n    <TableBody>\n      {stableSort(rows, getComparator(order, orderBy))\n        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n        .map((row, index) => {\n          const isItemSelected = isSelected(row.name);\n          const labelId = `enhanced-table-checkbox-${index}`;\n\n          return (\n            <TableRow\n              hover\n              onClick={(event) => handleClick(event, row.name)}\n              role=\"checkbox\"\n              aria-checked={isItemSelected}\n              tabIndex={-1}\n              key={row.name}\n              selected={isItemSelected}\n            >\n              <TableCell padding=\"checkbox\">\n                <Checkbox\n                  checked={isItemSelected}\n                  inputProps={{ 'aria-labelledby': labelId }}\n                />\n              </TableCell>\n              <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                <p style={{width: '12rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.name}</p>\n              </TableCell>\n              <TableCell padding=\"none\" align=\"left\"><p style={{width: '10rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.author}</p></TableCell>\n              <TableCell padding=\"none\" align=\"left\"><p style={{width: '9rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.lastPlayed}</p></TableCell>\n              <TableCell padding=\"none\" align=\"left\"><p style={{width: '2rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.popularity}</p></TableCell>\n            </TableRow>\n          );\n        })}\n      {emptyRows > 0 && (\n        <TableRow >\n          <TableCell colSpan={6} />\n        </TableRow>\n      )}\n    </TableBody>\n  </Table>\n</TableContainer>)\n\n  return (\n      <Paper elevation={2} className={classes.paper}>\n        <Switcher numSelected={selected.length}/>\n        {trackTable}\n        <TablePagination\n          rowsPerPageOptions={[5, 6,7,8,9, 10,15,20]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n  );\n}\n",["97","98"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/avatar/Avatar.js",["99"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepOrange[200]),\n    backgroundColor: deepOrange[200],\n    width: '10rem',\n    height: '10rem',\n    boxShadow: '0 0 10px 0 #ccc'\n  },\n}));\n\nexport default function LetterAvatar(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Avatar className={classes.purple}><Typography variant=\"h2\" noWrap>\n            OP\n          </Typography></Avatar>\n    </div>\n  );\n}",["100","101"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/stepper/CustomStepper.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/drawer/SideDrawer.js",["102","103","104","105","106","107","108","109"],"import React, {useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Avatar from '../avatar/Avatar';\nimport { Archive, Create, LibraryMusic, PhonelinkRing, QueueMusic, Timelapse } from '@material-ui/icons';\nimport CustomStepper from '../stepper/CustomStepper';\n\nconst drawerWidth = '20%';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    position: 'fixed'\n  },\n  avatarRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `100%`\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  //toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative',\n    alignItems: 'center',\n    height: '100vh',\n    marginTop: '0.5rem',\n    boxShadow: `0 0 5px 0 ${theme.palette.text.primary}`\n  },\n  mobileDrawerPaper: {\n    width: '50%',\n    position: 'relative',\n    alignItems: 'center',\n    marginTop: '0.5rem',\n    boxShadow: `0 0 10px 0 ${theme.palette.text.primary}`\n  },\n}));\n\nexport default function SideDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(props.open);\n\n  useEffect(() => {\n    setMobileOpen(props.mobileOpen);\n  }, [props.mobileOpen])\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <div className={classes.avatarRoot}>\n        <Avatar></Avatar>\n        <Typography variant='h4' noWrap>{props.username}</Typography>\n      </div>\n      <Divider />\n      <List>\n          <ListItem dense={true}>\n            <ListItemIcon><Timelapse></Timelapse></ListItemIcon>\n            <ListItemText primary={'Z nami od: '} secondary={props.dateFrom}/>\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><PhonelinkRing></PhonelinkRing></ListItemIcon>\n            <ListItemText primary={'Link do spotify: '} secondary={props.spotifyUrl}/>\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><LibraryMusic/></ListItemIcon>\n            <ListItemText primary={'Twoja ulubiona: '} secondary={props.favouriteSong} />\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><Archive/></ListItemIcon>\n            <ListItemText primary={'Zgromadziliśmy: ' + props.qtyOfTracks + ' Twoich utworów'} />\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><QueueMusic/></ListItemIcon>\n            <ListItemText primary={'Na spotify masz: ' + props.uPlaylists + ' playlist'} />\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><Create/></ListItemIcon>\n            <ListItemText primary={'Utworzyłeś tutaj: ' + props.recPlaylists + ' playlist'} />\n          </ListItem>\n      </List>\n      <CustomStepper></CustomStepper>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <React.Fragment>\n    <nav className={classes.root}>\n            <Hidden smUp implementation=\"css\">\n            <Drawer\n                container={container}\n                variant=\"temporary\"\n                anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                open={mobileOpen}\n                onClose={props.handleDrawerToggle}\n                classes={{\n                    paper: classes.mobileDrawerPaper,\n                }}\n                ModalProps={{\n                keepMounted: true, // Better open performance on mobile.\n                }}\n            >\n                {drawer}\n            </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n            <Drawer\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                variant=\"permanent\"\n                open\n            >\n                {drawer}\n            </Drawer>\n            </Hidden>\n        </nav>\n        <div style={{\n              margin: '0',\n              padding: '0',\n              width: '20%',\n              height: '100vh'\n            }}></div>\n    </React.Fragment>\n  );\n}\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/navbar/Navbar.js",["110","111","112"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n        margin: theme.spacing(1),\n        boxSizing: 'border-box'\n  },\n  offset: theme.mixins.toolbar,\n  marginOffset: {\n    height: theme.spacing(1)\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    width: '100%',\n    marginLeft: '2rem',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: '100%',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '100%',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function Navbar(props) {\n    const {window} = props\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(false);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(false);\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  \n    const handleProfileMenuOpen = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleMobileMenuClose = () => {\n      setMobileMoreAnchorEl(null);\n    };\n  \n    const handleMenuClose = () => {\n      setAnchorEl(null);\n      handleMobileMenuClose();\n    };\n  \n    const handleMobileMenuOpen = (event) => {\n      setMobileMoreAnchorEl(event.currentTarget);\n    };\n  \n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        id={menuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n  \n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        id={mobileMenuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n    );\n\nreturn(<React.Fragment>\n      <AppBar position=\"fixed\" className={classes.root}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.sectionMobile}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            GPSY - Your Smart Playlist Generator\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Szukaj utworów\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 12 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.marginOffset} ></div>\n      <div className={classes.offset} />\n      {renderMobileMenu}\n      {renderMenu}\n      </React.Fragment>)\n}","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/grid/Grid.js",["113","114"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, Typography } from '@material-ui/core';\nimport CustomStepper from '../stepper/CustomStepper';\nimport TableSuper from '../../table/TableSuper';\nimport Switcher from '../switcher/Switcher'\nimport HorizontalList from '../horizontalList/HorizontalList';\nimport Doughnut from '../chart/Doughnut';\n\nconst useStyles = makeStyles((theme) => ({\n    //grid\n    gridRoot: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'hidden',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: '100%',\n        maxHeight: '100%',\n    },\n    gridTile: {\n        //border: '1px solid green',\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        //padding: theme.spacing(1) ,\n        overflow: 'auto'\n    },\n    content: {\n        flexGrow: 1,\n        maxHeight: '80vh',\n        width: '80%'\n    },\n    typo: {\n        color: theme.palette.text.primary,\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nexport default function Grid(props) {\n    const classes = useStyles();\n    const recentlyPlayed =[\n        {\n            name: 'sohfiasadsadsadd sdfsdfasshfgiph', \n            author: \"sohfiasadsaad fssaadsdasshfgiph\", \n            recentlyPlayed: new Date().toISOString(),\n            popularity: 67 \n        },\n        {\n            name: 'sohfiasadsajjdasadd sdfsdfasshfgiph', \n            author: \"sohfiasadsaad fssaadsdasshfgiph\", \n            recentlyPlayed: new Date().toISOString(),\n            popularity: 67 \n        },\n        {\n            name: 'sohfiasadsadfsadd sdfsdfasshfgiph', \n            author: \"sohfiasadsaad fssaadsdasshfgiph\", \n            recentlyPlayed: new Date().toISOString(),\n            popularity: 67 \n        },\n        {\n            name: 'sohfiasadsfsadsadd sdfsdfasshfgiph', \n            author: \"sohfiasadsaad fssaadsdasshfgiph\", \n            recentlyPlayed: new Date().toISOString(),\n            popularity: 67 \n        },\n        {\n            name: 'sohfiasadsadsadd sdfsuudfasshfgiph', \n            author: \"sohfiasadsaad fssaadsdasshfgiph\", \n            recentlyPlayed: new Date().toISOString(),\n            popularity: 67 \n        },\n      ];\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.gridRoot}>\n                <GridList cellHeight={80} className={classes.gridList} cols={3}>\n                    <GridListTile cols={3} rows={2} className={classes.gridTile}> \n                        <Typography variant=\"h5\" className={classes.typo}>Rekomendowane przez Gpsy</Typography>\n                        <HorizontalList items={[1,2,3,4,5,6]}></HorizontalList>\n                    </GridListTile>\n                    <GridListTile cols={1} rows={7} className={classes.gridTile}>\n                        <Typography variant=\"h5\" className={classes.typo}>Moje gatunki</Typography>\n                        <Doughnut></Doughnut>\n                    </GridListTile>\n                    <GridListTile cols={2} rows={8} className={classes.gridTile}>\n                        <Typography variant=\"h5\" className={classes.typo}>Moje statystyki</Typography>\n                        <TableSuper rows={recentlyPlayed}></TableSuper>\n                    </GridListTile>\n                    <GridListTile cols={3} rows={2} className={classes.gridTile}>\n                        <Typography variant=\"h5\" className={classes.typo}>Spotify recommendation</Typography>\n                        <HorizontalList items={[1,2,3,4,5,6]}></HorizontalList>\n                    </GridListTile>\n                    <GridListTile cols={1} className={classes.gridTile}> <p>Hello world</p>\n                    </GridListTile>\n                    <GridListTile cols={1} className={classes.gridTile}> <p>Hello world</p>\n                    </GridListTile>\n                </GridList>\n            </div>\n        </main>\n    )\n}\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/switcher/Switcher.js",["115","116","117"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton, Tooltip, Typography } from '@material-ui/core';\nimport Popper from '../horizontalList/TrackItem/popper/Popper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    marginRight: 0,\n    marginLeft: 0\n  }, \n  selectedPaper: {\n    backgroundColor: theme.palette.success.main\n  },\n  selectedRoot: {\n    width: '100%',\n    height: '48px',\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: '0 2rem'\n  },\n  title: {\n    margin: '0 5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n}));\n\nexport default function CenteredTabs(props) {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const[selected, setSelected] = React.useState(false);\n\n  useEffect(() => {\n    if(props.numSelected) {\n      setSelected(true)\n    } else {\n      setSelected(false)\n    }\n  }, [props.numSelected])\n\n  return (\n    <Paper elevation={0} className={ props.numSelected ? [classes.selectedPaper, classes.root].join(' ') : classes.root}>\n      {selected ? (<div className={classes.selectedRoot}>\n                      <Popper/>\n                      <Typography className={classes.title} \n                                  color=\"inherit\" \n                                  variant=\"subtitle1\" >{props.numSelected} zaznaczone\n                      </Typography>\n                    </div>) : (<Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          centered\n          >\n          <Tab label=\"Ostatnio grane\" />\n          <Tab label=\"Najpopularniejsze\" />\n          <Tab label=\"Gwiazdy\" />\n        </Tabs>)}\n    </Paper>\n  );\n}\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/HorizontalList.js",["118","119"],"import React from 'react'\nimport TrackItem from './TrackItem/TrackItem'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        margin: theme.spacing(1)\n    },\n    horizontal: {\n        display: 'flex',\n        flexDirection: 'row',\n        overflowX: 'auto'\n    }\n}))\nconst HorizontalList = (props) => {\n    const classes = useStyles();\n\n    let components = props.items.map((el) => (\n        <TrackItem\n            name={'Title ' + el}\n            author={'Author ' + el}\n        />\n    ))\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.horizontal} >\n                {components}\n            </div>\n        </div>\n    )\n}\n\nexport default HorizontalList\n",["120","121"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/TrackItem.js",["122","123","124","125","126","127"],"import { Button, Fab, Paper, Popover, Tooltip, Typography } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Popper from './popper/Popper';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n      },\n    paper: {\n        minWidth: '180px',\n        display: 'flex',\n        flexDirection: 'row',\n        margin: theme.spacing(1),\n        padding: theme.spacing(2)\n    },\n    fab: {\n        margin: theme.spacing(2),\n      },\n      absolute: {\n        position: 'absolute',\n        bottom: theme.spacing(2),\n        right: theme.spacing(3),\n      },\n}))\n\nconst TrackItem = (props) => {\n    const classes = useStyles();\n    \n    return (\n        <Paper elevation={1} className={classes.paper}>\n            <div style={{width: '80%'}}>\n                <Typography variant=\"subtitle1\">{props.name}</Typography>\n                <Typography variant=\"subtitle2\">{props.author}</Typography>\n            </div>\n            <Popper/>\n        </Paper>\n    )\n}\n\nexport default TrackItem\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/chart/Doughnut.js",["128"],"import { makeStyles } from '@material-ui/core'\nimport Chart from 'chart.js'\nimport React, {useEffect} from 'react'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        marginTop: theme.spacing(1)\n    }\n}))\n\nconst Doughnut = () => {\n    const classes = useStyles();\n    useEffect(() => {\n        let context = document.getElementById('doughnut').getContext('2d');\n        const musicCategoryChart = new Chart(context, {\n            type: 'doughnut',\n            data: {\n                datasets: [{\n                    label: '# of Votes',\n                    data: [12, 19, 3, 5, 2, 3],\n                    backgroundColor: [\n                        'rgba(255, 99, 132, 0.4)',\n                        'rgba(54, 162, 235, 0.4)',\n                        'rgba(255, 206, 86, 0.4)',\n                        'rgba(75, 192, 192, 0.4)',\n                        'rgba(153, 102, 255, 0.4)',\n                        'rgba(255, 159, 64, 0.4)'\n                    ],\n                    borderColor: [\n                        'rgba(255, 99, 132, 1)',\n                        'rgba(54, 162, 235, 1)',\n                        'rgba(255, 206, 86, 1)',\n                        'rgba(75, 192, 192, 1)',\n                        'rgba(153, 102, 255, 1)',\n                        'rgba(255, 159, 64, 1)'\n                    ],\n                    borderWidth: 1,\n                    hoverBorderColor: 'black',\n                    hoverBorderWidth: 2\n                }],\n                 labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Pop'],\n            },\n            options: {\n               cutoutPercentage: 60,\n               responsive: true,\n               aspectRatio: 1\n            },\n        });\n    }, [])\n\n    \n    return (\n        <div className={classes.root}>\n            <canvas id=\"doughnut\"></canvas>\n        </div>\n    )\n}\n\nexport default Doughnut\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/popper/Popper.js",["129","130","131"],"import React from 'react'\nimport { Button, CircularProgress, Fab, FormControl, FormHelperText, InputLabel, makeStyles, NativeSelect, Paper, Popover, Tooltip, Typography } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport { green } from '@material-ui/core/colors';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n    },\n    loading: {\n        margin: theme.spacing(1),\n        minWidth: 220,\n        minHeight: 80,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'left',\n    },\n\n    wrapper: {\n        margin: theme.spacing(1)\n    },\n    popUpPaper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 220,\n      },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n      buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n          backgroundColor: green[700],\n        },\n      },\n      fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(1),\n        zIndex: 1,\n        overflow: 'hidden'\n      },\n      buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        marginTop: 0,\n        marginLeft: 0,\n      },\n}))\n\nconst Popper = () => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n      age: '',\n      name: 'hai',\n    });\n\n\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const timer = React.useRef();\n  \n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n  \n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timer.current);\n      };\n    }, []);\n  \n    const handleButtonClick = () => {\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n        timer.current = window.setTimeout(() => {\n          setSuccess(true);\n          setLoading(false);\n        }, 2000);\n      }\n    };\n  \n    const handleChange = (event) => {\n        const name = event.target.name;\n        setState({\n          ...state,\n          [name]: event.target.value,\n        });\n    };\n  \n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const [content, setContent] = React.useState();\n   \n    return (\n        <div>\n            <Tooltip title=\"Add\" \n                    aria-label=\"add\"\n                    onClick={handleClick}\n                    style={{margin: '0', padding: '0'}}\n                    >\n                <Fab color=\"primary\" className={classes.fab}>\n                <AddIcon />\n            </Fab>\n            </Tooltip>\n            <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n            >\n                {((loading && !success) || (!loading && success)) ? \n                        (<div className={classes.loading}>\n                                <div className={classes.wrapper}>\n                                    <Fab\n                                        aria-label=\"save\"\n                                        color=\"primary\"\n                                        className={buttonClassname}\n                                        onClick={handleButtonClick}\n                                    >\n                                        {success ? <CheckIcon /> : <SaveIcon />}\n                                    </Fab>\n                                    {loading && <CircularProgress size={72} className={classes.fabProgress} />}\n                                </div>\n                            <Typography variant=\"subtitle1\" style={{display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>{ success ? 'Zapisano pomyślnie' : 'Zapisuję...'}</Typography>\n                        </div>) \n                    : (<div className={classes.popUpPaper}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"age-native-helper\">Playlista</InputLabel>\n                            <NativeSelect\n                            value={state.age}\n                            onChange={handleChange}\n                            inputProps={{\n                                name: 'age',\n                                id: 'age-native-helper',\n                            }}\n                            >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option value={10}>Ten</option>\n                            <option value={20}>Twenty</option>\n                            <option value={30}>Thirty</option>\n                            </NativeSelect>\n                            <FormHelperText>Wybierz Playlistę do której dodać utwór</FormHelperText>\n                        </FormControl>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleButtonClick} >Dodaj</Button>\n                    </div>)}\n            </Popover>\n            \n        </div>\n    )\n}\n\nexport default Popper\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/Dashboard.js",["132","133"],"import React from 'react';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\nimport SideDrawer from './drawer/SideDrawer'\nimport Navbar from './navbar/Navbar'\nimport Grid from './grid/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n         display: 'block',\n       },\n    trackContent: {\n    display: 'flex',\n    flexDirection: 'row',\n    width: '100%',\n    overflow: 'visible',\n    flexShrink: '0'\n  }\n}))\n\nexport default function Dashboard(props) {\n  const classes = useStyles();\n  const [mobileOpen, setMobileOpen] = React.useState(props.open);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Navbar handleDrawerToggle={handleDrawerToggle}></Navbar>\n      <div className={classes.trackContent}>\n        <SideDrawer\n          username='Daniel'\n          dateFrom={new Date().toISOString().substring(0,10)} \n          spotifyUrl='/sdfhg.com'\n          handleDrawerToggle={handleDrawerToggle} mobileOpen={mobileOpen}></SideDrawer>\n        {/* <div>Hello world</div> */}\n        <Grid></Grid>\n        </div>\n    </div>\n  );\n}","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/Login.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/ProgressBar.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/register/Register.js",["134","135","136"],"import React from 'react'\nimport { Button, Checkbox, FormControlLabel, makeStyles, Paper, TextField, Typography } from '@material-ui/core'\nimport ProgressBar from '../login/ProgressBar'\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        height: '100vh',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'radial-gradient(circle, rgba(255,220,0,1) 10%, rgba(87,121,9,1) 66%, rgba(46,46,46,1) 100%)'\n    },\n    paper: {\n        margin: 0,\n        padding: '2rem',\n        width: '30%',\n        height: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1)\n        }\n    },\n    inputText: {\n        width: '60%'\n    }, \n    header: {\n        margin: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.secondary.dark\n    }\n}))\n\nconst Register = () => {\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n        remeber: true,\n      });\n    \n      const handleChange = (event) => {\n        setState({ ...state, [event.target.name]: event.target.checked });\n      };\n    return (\n        <form className={classes.root}>\n        <Paper elevation={3} className={classes.paper} > \n            <Typography variant=\"h3\" className={classes.header}>Panel rejestracji nowego użytkownika</Typography>\n            <TextField\n                required\n                id=\"outlined-login-input\"\n                placeholder=\"min. 6 znaków\"\n                label=\"Login\"\n                type=\"login\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                className={classes.inputText}\n            />\n            <TextField\n                required\n                id=\"outlined-login-input\"\n                label=\"Email\"\n                type=\"email\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                className={classes.inputText}\n            />\n            <TextField\n                required\n                id=\"outlined-password-input\"\n                placeholder=\"8 znaków, 1 liczba, wielka i mała litera\"\n                label=\"Hasło\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                className={classes.inputText}\n            />\n            <TextField\n                required\n                id=\"outlined-password-input\"\n                label=\"Potwierdź hasło\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                className={classes.inputText}\n            />\n            <Button color=\"primary\" variant=\"outlined\" style={{width: '80%'}}>Zarejestruj</Button>\n            <ProgressBar ></ProgressBar>\n        </Paper>\n    </form>\n    )\n}\n\nexport default Register\n",{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","severity":2,"message":"142","line":15,"column":10,"nodeType":"143","endLine":15,"endColumn":15},{"ruleId":"144","severity":1,"message":"145","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":15},{"ruleId":"144","severity":1,"message":"148","line":19,"column":8,"nodeType":"146","messageId":"147","endLine":19,"endColumn":24},{"ruleId":"144","severity":1,"message":"149","line":20,"column":8,"nodeType":"146","messageId":"147","endLine":20,"endColumn":14},{"ruleId":"144","severity":1,"message":"150","line":22,"column":8,"nodeType":"146","messageId":"147","endLine":22,"endColumn":22},{"ruleId":"137","replacedBy":"151"},{"ruleId":"139","replacedBy":"152"},{"ruleId":"144","severity":1,"message":"153","line":4,"column":22,"nodeType":"146","messageId":"147","endLine":4,"endColumn":32},{"ruleId":"137","replacedBy":"154"},{"ruleId":"139","replacedBy":"155"},{"ruleId":"144","severity":1,"message":"156","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":17},{"ruleId":"144","severity":1,"message":"157","line":3,"column":8,"nodeType":"146","messageId":"147","endLine":3,"endColumn":14},{"ruleId":"144","severity":1,"message":"158","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":19},{"ruleId":"144","severity":1,"message":"159","line":8,"column":8,"nodeType":"146","messageId":"147","endLine":8,"endColumn":18},{"ruleId":"144","severity":1,"message":"160","line":9,"column":8,"nodeType":"146","messageId":"147","endLine":9,"endColumn":17},{"ruleId":"144","severity":1,"message":"161","line":14,"column":8,"nodeType":"146","messageId":"147","endLine":14,"endColumn":16},{"ruleId":"144","severity":1,"message":"162","line":15,"column":8,"nodeType":"146","messageId":"147","endLine":15,"endColumn":16},{"ruleId":"144","severity":1,"message":"163","line":16,"column":8,"nodeType":"146","messageId":"147","endLine":16,"endColumn":15},{"ruleId":"144","severity":1,"message":"158","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":19},{"ruleId":"144","severity":1,"message":"164","line":17,"column":28,"nodeType":"146","messageId":"147","endLine":17,"endColumn":36},{"ruleId":"144","severity":1,"message":"165","line":92,"column":12,"nodeType":"146","messageId":"147","endLine":92,"endColumn":18},{"ruleId":"144","severity":1,"message":"166","line":4,"column":8,"nodeType":"146","messageId":"147","endLine":4,"endColumn":21},{"ruleId":"144","severity":1,"message":"167","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":16},{"ruleId":"144","severity":1,"message":"168","line":6,"column":8,"nodeType":"146","messageId":"147","endLine":6,"endColumn":18},{"ruleId":"144","severity":1,"message":"159","line":7,"column":10,"nodeType":"146","messageId":"147","endLine":7,"endColumn":20},{"ruleId":"144","severity":1,"message":"169","line":7,"column":22,"nodeType":"146","messageId":"147","endLine":7,"endColumn":29},{"ruleId":"144","severity":1,"message":"164","line":3,"column":22,"nodeType":"146","messageId":"147","endLine":3,"endColumn":30},{"ruleId":"144","severity":1,"message":"170","line":4,"column":10,"nodeType":"146","messageId":"147","endLine":4,"endColumn":20},{"ruleId":"137","replacedBy":"171"},{"ruleId":"139","replacedBy":"172"},{"ruleId":"144","severity":1,"message":"173","line":1,"column":10,"nodeType":"146","messageId":"147","endLine":1,"endColumn":16},{"ruleId":"144","severity":1,"message":"174","line":1,"column":18,"nodeType":"146","messageId":"147","endLine":1,"endColumn":21},{"ruleId":"144","severity":1,"message":"175","line":1,"column":30,"nodeType":"146","messageId":"147","endLine":1,"endColumn":37},{"ruleId":"144","severity":1,"message":"169","line":1,"column":39,"nodeType":"146","messageId":"147","endLine":1,"endColumn":46},{"ruleId":"144","severity":1,"message":"176","line":2,"column":8,"nodeType":"146","messageId":"147","endLine":2,"endColumn":15},{"ruleId":"144","severity":1,"message":"164","line":4,"column":22,"nodeType":"146","messageId":"147","endLine":4,"endColumn":30},{"ruleId":"144","severity":1,"message":"177","line":15,"column":15,"nodeType":"146","messageId":"147","endLine":15,"endColumn":33},{"ruleId":"144","severity":1,"message":"178","line":2,"column":108,"nodeType":"146","messageId":"147","endLine":2,"endColumn":113},{"ruleId":"144","severity":1,"message":"179","line":115,"column":12,"nodeType":"146","messageId":"147","endLine":115,"endColumn":19},{"ruleId":"144","severity":1,"message":"180","line":115,"column":21,"nodeType":"146","messageId":"147","endLine":115,"endColumn":31},{"ruleId":"144","severity":1,"message":"181","line":2,"column":10,"nodeType":"146","messageId":"147","endLine":2,"endColumn":14},{"ruleId":"144","severity":1,"message":"164","line":2,"column":28,"nodeType":"146","messageId":"147","endLine":2,"endColumn":36},{"ruleId":"144","severity":1,"message":"182","line":2,"column":18,"nodeType":"146","messageId":"147","endLine":2,"endColumn":26},{"ruleId":"144","severity":1,"message":"148","line":2,"column":28,"nodeType":"146","messageId":"147","endLine":2,"endColumn":44},{"ruleId":"144","severity":1,"message":"183","line":43,"column":13,"nodeType":"146","messageId":"147","endLine":43,"endColumn":25},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react/jsx-no-undef","'Login' is not defined.","JSXIdentifier","no-unused-vars","'brown' is defined but never used.","Identifier","unusedVar","'FormControlLabel' is defined but never used.","'Switch' is defined but never used.","'FilterListIcon' is defined but never used.",["184"],["185"],"'deepPurple' is defined but never used.",["184"],["185"],"'PropTypes' is defined but never used.","'AppBar' is defined but never used.","'CssBaseline' is defined but never used.","'IconButton' is defined but never used.","'InboxIcon' is defined but never used.","'MailIcon' is defined but never used.","'MenuIcon' is defined but never used.","'Toolbar' is defined but never used.","'useTheme' is defined but never used.","'window' is assigned a value but never used.","'CustomStepper' is defined but never used.","'Switcher' is defined but never used.","'DeleteIcon' is defined but never used.","'Tooltip' is defined but never used.","'Typography' is defined but never used.",["184"],["185"],"'Button' is defined but never used.","'Fab' is defined but never used.","'Popover' is defined but never used.","'AddIcon' is defined but never used.","'musicCategoryChart' is assigned a value but never used.","'Paper' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'fade' is defined but never used.","'Checkbox' is defined but never used.","'handleChange' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]