[{"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reportWebVitals.js":"1","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/App.js":"2","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/index.js":"3","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/avatar/Avatar.js":"4","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/stepper/CustomStepper.js":"5","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/drawer/SideDrawer.js":"6","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/navbar/Navbar.js":"7","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/switcher/Switcher.js":"8","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/HorizontalList.js":"9","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/TrackItem.js":"10","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/chart/Doughnut.js":"11","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/popper/Popper.js":"12","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/Login.js":"13","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/ProgressBar.js":"14","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/register/Register.js":"15","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/axios.js":"16","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/scroll-to-top/ScrollToTop.js":"17","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/register/RegisterSuccess.js":"18","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/home/Home.js":"19","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/home/Hexagon.js":"20","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reducers/counter.js":"21","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reducers/isLogged.js":"22","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/actions/index.js":"23","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reducers/index.js":"24","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/grid/Grid.js":"25","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/Dashboard.js":"26","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/MainTable.js":"27","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/PopularTable.js":"28","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/RecentTracksTable.js":"29","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/RaisingTracksTable.js":"30"},{"size":362,"mtime":1610058670026,"results":"31","hashOfConfig":"32"},{"size":921,"mtime":1611610187340,"results":"33","hashOfConfig":"32"},{"size":1355,"mtime":1611393609525,"results":"34","hashOfConfig":"32"},{"size":1180,"mtime":1611395450425,"results":"35","hashOfConfig":"32"},{"size":3401,"mtime":1610666280556,"results":"36","hashOfConfig":"32"},{"size":6200,"mtime":1611400271059,"results":"37","hashOfConfig":"32"},{"size":7333,"mtime":1610728381540,"results":"38","hashOfConfig":"32"},{"size":2045,"mtime":1611614424575,"results":"39","hashOfConfig":"32"},{"size":782,"mtime":1611690531333,"results":"40","hashOfConfig":"32"},{"size":1681,"mtime":1611690440765,"results":"41","hashOfConfig":"32"},{"size":4276,"mtime":1611766573525,"results":"42","hashOfConfig":"32"},{"size":5899,"mtime":1610665037250,"results":"43","hashOfConfig":"32"},{"size":6773,"mtime":1611690298404,"results":"44","hashOfConfig":"32"},{"size":450,"mtime":1611271259217,"results":"45","hashOfConfig":"32"},{"size":7939,"mtime":1611388692318,"results":"46","hashOfConfig":"32"},{"size":124,"mtime":1611262004518,"results":"47","hashOfConfig":"32"},{"size":394,"mtime":1611333611589,"results":"48","hashOfConfig":"32"},{"size":1361,"mtime":1611336535370,"results":"49","hashOfConfig":"32"},{"size":2633,"mtime":1611350871367,"results":"50","hashOfConfig":"32"},{"size":274,"mtime":1611344453685,"results":"51","hashOfConfig":"32"},{"size":239,"mtime":1611393231096,"results":"52","hashOfConfig":"32"},{"size":212,"mtime":1611394926125,"results":"53","hashOfConfig":"32"},{"size":110,"mtime":1611394878400,"results":"54","hashOfConfig":"32"},{"size":242,"mtime":1611393105250,"results":"55","hashOfConfig":"32"},{"size":5636,"mtime":1611700592711,"results":"56","hashOfConfig":"32"},{"size":1098,"mtime":1611616824917,"results":"57","hashOfConfig":"32"},{"size":2023,"mtime":1611614466104,"results":"58","hashOfConfig":"32"},{"size":11602,"mtime":1611612954081,"results":"59","hashOfConfig":"32"},{"size":11326,"mtime":1611612944349,"results":"60","hashOfConfig":"32"},{"size":11608,"mtime":1611614371606,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"tcckm7",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"93"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"93"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"139"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"93"},"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reportWebVitals.js",[],["146","147"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/App.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/index.js",["148"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { brown, yellow, green } from '@material-ui/core/colors';\nimport {BrowserRouter} from 'react-router-dom'\nimport {createStore} from 'redux';\nimport allReducers from './reducers/index'\nimport {Provider} from 'react-redux';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    secondary: {\n      main: green[400],\n    },\n    primary: {\n      light: '#757ce8',\n      main: yellow[200],\n    },\n    neutral: {\n      main: '#fff'\n    }\n  },\n});\n\nconst store = createStore(allReducers, \n  /* preloadedState, */\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  );\n\nReactDOM.render(\n    <Provider store={store}>\n      <BrowserRouter>\n        <React.StrictMode>\n          <ThemeProvider theme={theme}>\n            <App />\n          </ThemeProvider>\n        </React.StrictMode>\n      </BrowserRouter>\n    </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["149","150"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/avatar/Avatar.js",["151"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport { deepOrange, deepPurple } from '@material-ui/core/colors';\nimport { Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > *': {\n      margin: theme.spacing(1),\n    },\n    '&:hover': {\n      cursor: 'pointer'\n    }\n  },\n  purple: {\n    color: theme.palette.getContrastText(deepOrange[200]),\n    backgroundColor: deepOrange[200],\n    width: '10rem',\n    height: '10rem',\n    boxShadow: `0 0 20px ${theme.palette.background.default}`\n  },\n}));\n\nexport default function LetterAvatar(props) {\n  const classes = useStyles();\n  const name = props.name ? props.name : '';\n  let parsedName = name.split(' ');\n  if(parsedName.length === 1) {\n    parsedName = parsedName.join('').slice(0,2).toUpperCase();\n  } else {\n    parsedName = parsedName.map(el => el[0]).join('').toUpperCase();\n  }\n  return (\n    <div className={classes.root}>\n      <Avatar className={classes.purple}><Typography variant=\"h2\" noWrap>\n            {parsedName}\n          </Typography></Avatar>\n    </div>\n  );\n}",["152","153"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/stepper/CustomStepper.js",[],["154","155"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/drawer/SideDrawer.js",["156","157"],"import React, {useEffect} from 'react';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Avatar from '../avatar/Avatar';\nimport { Archive, Create, LibraryMusic, PhonelinkRing, QueueMusic, Timelapse } from '@material-ui/icons';\nimport CustomStepper from '../stepper/CustomStepper';\nimport {useSelector} from 'react-redux';\nimport axios from '../../axios';\nimport axiosToken from 'axios';\nimport Link from '@material-ui/core/Link';\nimport { Button } from '@material-ui/core';\nconst drawerWidth = '20%';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    position: 'fixed'\n  },\n  avatarRoot: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  appBar: {\n    [theme.breakpoints.up('sm')]: {\n      width: `100%`\n    },\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  // necessary for content to be below app bar\n  //toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,\n    position: 'relative',\n    alignItems: 'center',\n    height: '100vh',\n    marginTop: '0.5rem',\n    boxShadow: `0 0 20px ${theme.palette.background.default}`\n  },\n  mobileDrawerPaper: {\n    width: '50%',\n    position: 'relative',\n    alignItems: 'center',\n    marginTop: '0.5rem',\n    boxShadow: `0 0 20px ${theme.palette.background.default}`\n  },\n}));\n\nexport default function SideDrawer(props) {\n  const { window } = props;\n  const classes = useStyles();\n  const theme = useTheme();\n  const [mobileOpen, setMobileOpen] = React.useState(props.open);\n  const userMeta = useSelector(state => state.logged);\n  const [user, setUser] = React.useState({});\n  const cancelTokenSource = axiosToken.CancelToken.source()\n  const [render, setRender] = React.useState(false);\n\n  useEffect(() => {\n    axios.get('/user/statistics',\n    {headers: {\n      Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n    }},\n    {\n      cancelToken: cancelTokenSource.token\n    }\n    )\n    .then(data => {\n      setUser(data.data.info.data);\n      console.log(data);\n      setRender(true);\n    })\n    .catch(err => {\n      console.log(err)\n    })\n    return () => {\n      cancelTokenSource.cancel();\n    }\n  }, [userMeta])\n\n  useEffect(() => {\n    setMobileOpen(props.mobileOpen);\n  }, [props.mobileOpen])\n\n  const drawer = (\n    <div>\n      <div className={classes.toolbar} />\n      <div className={classes.avatarRoot}>\n        <Avatar name = {user.login}></Avatar>\n        <Typography variant='h4' noWrap>{user.login}</Typography>\n      </div>\n      <Divider />\n      <List>\n          <ListItem dense={true}>\n            <ListItemIcon><Timelapse></Timelapse></ListItemIcon>\n            <ListItemText primary={'Z nami od: '} secondary={user.from ? user.from.replace(/[ZT]/g, ' ').slice(0,19) : ''}/>\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><PhonelinkRing></PhonelinkRing></ListItemIcon>\n            <div>\n              <ListItemText primary={'Link do konta spotify: '}/>\n              <Button style={{width: '90%'}} target=\"_blank\" href={user.spotifyDirectLink} variant=\"contained\" color=\"secondary\">click</Button>\n            </div>\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><LibraryMusic/></ListItemIcon>\n            <ListItemText primary={'Twoja ulubiona: '} secondary={ user.bestTrack ? user.bestTrack[0].name + '|' + user.bestTrack[0].author : ''} />\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><Archive/></ListItemIcon>\n            <ListItemText primary={'Zgromadziliśmy: '} secondary={user.trackQuantity + ' Twoich utworów'} />\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><QueueMusic/></ListItemIcon>\n            <ListItemText primary={'Na spotify masz: '} secondary={user.playlistQuantity + ' playlist'} />\n          </ListItem>\n          <ListItem dense={true}>\n            <ListItemIcon><Create/></ListItemIcon>\n            <ListItemText primary={'Utworzyłeś tutaj: ' + props.recPlaylists + ' playlist'} />\n          </ListItem>\n      </List>\n      <CustomStepper></CustomStepper>\n    </div>\n  );\n\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  return (\n    <React.Fragment>\n      {render ? <React.Fragment><nav className={classes.root}>\n              <Hidden smUp implementation=\"css\">\n              <Drawer\n                  container={container}\n                  variant=\"temporary\"\n                  anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                  open={mobileOpen}\n                  onClose={props.handleDrawerToggle}\n                  classes={{\n                      paper: classes.mobileDrawerPaper,\n                  }}\n                  ModalProps={{\n                  keepMounted: true, // Better open performance on mobile.\n                  }}\n              >\n                  {drawer}\n              </Drawer>\n              </Hidden>\n              <Hidden xsDown implementation=\"css\">\n              <Drawer\n                  classes={{\n                      paper: classes.drawerPaper,\n                  }}\n                  variant=\"permanent\"\n                  open\n              >\n                  {drawer}\n              </Drawer>\n              </Hidden>\n          </nav>\n          <div style={{\n                margin: '0',\n                padding: '0',\n                width: '20%',\n                height: '100vh'\n              }}></div> \n          </React.Fragment>\n          : <div style={{\n                margin: '0',\n                padding: '0',\n                width: '20%',\n                height: '100vh'\n              }}></div>}\n    </React.Fragment>\n  );\n}\n",["158","159"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/navbar/Navbar.js",["160","161","162"],"import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport Badge from '@material-ui/core/Badge';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport MailIcon from '@material-ui/icons/Mail';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport { fade, makeStyles, useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n        margin: theme.spacing(1),\n        boxSizing: 'border-box'\n  },\n  offset: theme.mixins.toolbar,\n  marginOffset: {\n    height: theme.spacing(1)\n    \n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    width: '100%',\n    marginLeft: '2rem',\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.black, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.black, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(3),\n      width: '100%',\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('md')]: {\n      width: '100%',\n    },\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n}));\n\nexport default function Navbar(props) {\n    const {window} = props\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(false);\n    const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(false);\n    const isMenuOpen = Boolean(anchorEl);\n    const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n  \n    const handleProfileMenuOpen = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n  \n    const handleMobileMenuClose = () => {\n      setMobileMoreAnchorEl(null);\n    };\n  \n    const handleMenuClose = () => {\n      setAnchorEl(null);\n      handleMobileMenuClose();\n    };\n  \n    const handleMobileMenuOpen = (event) => {\n      setMobileMoreAnchorEl(event.currentTarget);\n    };\n  \n    const menuId = 'primary-search-account-menu';\n    const renderMenu = (\n      <Menu\n        anchorEl={anchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        id={menuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMenuOpen}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </Menu>\n    );\n  \n    const mobileMenuId = 'primary-search-account-menu-mobile';\n    const renderMobileMenu = (\n      <Menu\n        anchorEl={mobileMoreAnchorEl}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        id={mobileMenuId}\n        keepMounted\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n        open={isMobileMenuOpen}\n        onClose={handleMobileMenuClose}\n      >\n        <MenuItem>\n          <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n            <Badge badgeContent={4} color=\"secondary\">\n              <MailIcon />\n            </Badge>\n          </IconButton>\n          <p>Messages</p>\n        </MenuItem>\n        <MenuItem>\n          <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\n            <Badge badgeContent={11} color=\"secondary\">\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <p>Notifications</p>\n        </MenuItem>\n        <MenuItem onClick={handleProfileMenuOpen}>\n          <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"primary-search-account-menu\"\n            aria-haspopup=\"true\"\n            color=\"inherit\"\n          >\n            <AccountCircle />\n          </IconButton>\n          <p>Profile</p>\n        </MenuItem>\n      </Menu>\n    );\n\nreturn(<React.Fragment>\n      <AppBar position=\"fixed\" className={classes.root}>\n        <Toolbar>\n          <IconButton\n            edge=\"start\"\n            className={classes.sectionMobile}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            GPSY - Your Smart Playlist Generator\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Szukaj utworów\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'search' }}\n            />\n          </div>\n          <div className={classes.sectionDesktop}>\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\n              <Badge badgeContent={4} color=\"secondary\">\n                <MailIcon />\n              </Badge>\n            </IconButton>\n            <IconButton aria-label=\"show 12 new notifications\" color=\"inherit\">\n              <Badge badgeContent={17} color=\"secondary\">\n                <NotificationsIcon />\n              </Badge>\n            </IconButton>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              onClick={handleMobileMenuOpen}\n              color=\"inherit\"\n            >\n              <MoreIcon />\n            </IconButton>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div className={classes.marginOffset} ></div>\n      <div className={classes.offset} />\n      {renderMobileMenu}\n      {renderMenu}\n      </React.Fragment>)\n}","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/switcher/Switcher.js",["163","164","165"],"import React, {useEffect} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { IconButton, Tooltip, Typography } from '@material-ui/core';\nimport Popper from '../horizontalList/TrackItem/popper/Popper';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(1),\n    marginRight: 0,\n    marginLeft: 0\n  }, \n  selectedPaper: {\n    backgroundColor: theme.palette.success.main\n  },\n  selectedRoot: {\n    width: '100%',\n    height: '48px',\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    padding: '0 2rem'\n  },\n  title: {\n    margin: '0 5rem',\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center'\n  }\n}));\n\nexport default function CenteredTabs(props) {\n  const classes = useStyles();\n  const[selected, setSelected] = React.useState(false);\n\n  useEffect(() => {\n    if(props.numSelected) {\n      setSelected(true)\n    } else {\n      setSelected(false)\n    }\n  }, [props.numSelected])\n\n  return (\n    <Paper elevation={0} className={ props.numSelected ? [classes.selectedPaper, classes.root].join(' ') : classes.root}>\n      {selected ? (<div className={classes.selectedRoot}>\n                      <Popper/>\n                      <Typography className={classes.title} \n                                  color=\"inherit\" \n                                  variant=\"subtitle1\" >{props.numSelected} zaznaczone\n                      </Typography>\n                    </div>) : \n        (<Tabs\n          value={props.pageRender}\n          onChange={(event, newValue) => props.onChangeClick(newValue)}\n          indicatorColor=\"secondary\"\n          textColor=\"secondary\"\n          centered\n          >\n          <Tab label=\"Ostatnio grane\" />\n          <Tab label=\"Najpopularniejsze\" />\n          <Tab label=\"Wschodzące\" />\n        </Tabs>)}\n    </Paper>\n  );\n}\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/HorizontalList.js",["166","167"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/TrackItem.js",["168","169","170","171","172","173"],"import { Button, Fab, Paper, Popover, Tooltip, Typography } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport React from 'react'\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Popper from './popper/Popper';\n\nconst useStyles = makeStyles(theme => ({\n    typography: {\n        padding: theme.spacing(2),\n      },\n    paper: {\n        boxSizing: 'border-box',\n        maxHeight: '100%',\n        display: 'flex',\n        position: 'relative',\n        flexDirection: 'row',\n        padding: theme.spacing(2),\n    },\n    fab: {\n        boxSizing: 'border-box',\n        padding: theme.spacing(1),\n        minWidth: '250px',\n        maxHeight: '105px',\n      },\n    bkgNumber: {\n        margin: '0', \n        padding: '0', \n        top: '0', \n        fontSize: '5rem', \n        fontWeight: 'bold', \n        position: 'absolute', \n        opacity: '0.5',\n        color: theme.palette.secondary.dark,\n        zIndex: 0\n    }\n}))\n\nconst TrackItem = (props) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.fab}>\n            <Paper elevation={10} className={classes.paper}>\n                <Typography variant=\"h2\" className={classes.bkgNumber}>{props.index}</Typography>\n                <div style={{zIndex: '10', width: '80%', display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>\n                    <Typography variant=\"caption\" style={{fontWeight: 'bold'}}>{props.name}</Typography>\n                    <Typography variant=\"caption\">{props.author}</Typography>\n                </div>\n                <Popper/>\n            </Paper>\n        </div>\n    )\n}\n\nexport default TrackItem\n",["174","175"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/chart/Doughnut.js",["176"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/horizontalList/TrackItem/popper/Popper.js",["177","178","179"],"import React from 'react'\nimport { Button, CircularProgress, Fab, FormControl, FormHelperText, InputLabel, makeStyles, NativeSelect, Paper, Popover, Tooltip, Typography } from '@material-ui/core'\nimport AddIcon from '@material-ui/icons/Add';\nimport { green } from '@material-ui/core/colors';\nimport CheckIcon from '@material-ui/icons/Check';\nimport SaveIcon from '@material-ui/icons/Save';\nimport clsx from 'clsx';\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: theme.spacing(1),\n    },\n    loading: {\n        margin: theme.spacing(1),\n        minWidth: 220,\n        minHeight: 80,\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'left',\n    },\n\n    wrapper: {\n        margin: theme.spacing(1)\n    },\n    popUpPaper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 220,\n      },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n\n      buttonSuccess: {\n        backgroundColor: green[500],\n        '&:hover': {\n          backgroundColor: green[700],\n        },\n      },\n      fabProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: theme.spacing(1),\n        left: theme.spacing(1),\n        zIndex: 1,\n        overflow: 'hidden'\n      },\n      buttonProgress: {\n        color: green[500],\n        position: 'absolute',\n        top: '0',\n        left: '0',\n        marginTop: 0,\n        marginLeft: 0,\n      },\n}))\n\nconst Popper = () => {\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n    const id = open ? 'simple-popover' : undefined;\n    const classes = useStyles();\n    const [state, setState] = React.useState({\n      age: '',\n      name: 'hai',\n    });\n\n\n    const [loading, setLoading] = React.useState(false);\n    const [success, setSuccess] = React.useState(false);\n    const timer = React.useRef();\n  \n    const buttonClassname = clsx({\n      [classes.buttonSuccess]: success,\n    });\n  \n    React.useEffect(() => {\n      return () => {\n        clearTimeout(timer.current);\n      };\n    }, []);\n  \n    const handleButtonClick = () => {\n      if (!loading) {\n        setSuccess(false);\n        setLoading(true);\n        timer.current = window.setTimeout(() => {\n          setSuccess(true);\n          setLoading(false);\n        }, 2000);\n      }\n    };\n  \n    const handleChange = (event) => {\n        const name = event.target.name;\n        setState({\n          ...state,\n          [name]: event.target.value,\n        });\n    };\n  \n  \n    const handleClick = (event) => {\n      setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n  \n    const [content, setContent] = React.useState();\n   \n    return (\n        <div>\n            <Tooltip title=\"Add\" \n                    aria-label=\"add\"\n                    onClick={handleClick}\n                    style={{margin: '0', padding: '0'}}\n                    >\n                <Fab color=\"primary\" className={classes.fab}>\n                <AddIcon />\n            </Fab>\n            </Tooltip>\n            <Popover\n                    id={id}\n                    open={open}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'center',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'center',\n                    }}\n            >\n                {((loading && !success) || (!loading && success)) ? \n                        (<div className={classes.loading}>\n                                <div className={classes.wrapper}>\n                                    <Fab\n                                        aria-label=\"save\"\n                                        color=\"primary\"\n                                        className={buttonClassname}\n                                        onClick={handleButtonClick}\n                                    >\n                                        {success ? <CheckIcon /> : <SaveIcon />}\n                                    </Fab>\n                                    {loading && <CircularProgress size={72} className={classes.fabProgress} />}\n                                </div>\n                            <Typography variant=\"subtitle1\" style={{display: 'flex', flexDirection: 'column', justifyContent: 'center'}}>{ success ? 'Zapisano pomyślnie' : 'Zapisuję...'}</Typography>\n                        </div>) \n                    : (<div className={classes.popUpPaper}>\n                        <FormControl className={classes.formControl}>\n                            <InputLabel htmlFor=\"age-native-helper\">Playlista</InputLabel>\n                            <NativeSelect\n                            value={state.age}\n                            onChange={handleChange}\n                            inputProps={{\n                                name: 'age',\n                                id: 'age-native-helper',\n                            }}\n                            >\n                            <option aria-label=\"None\" value=\"\" />\n                            <option value={10}>Ten</option>\n                            <option value={20}>Twenty</option>\n                            <option value={30}>Thirty</option>\n                            </NativeSelect>\n                            <FormHelperText>Wybierz Playlistę do której dodać utwór</FormHelperText>\n                        </FormControl>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={handleButtonClick} >Dodaj</Button>\n                    </div>)}\n            </Popover>\n            \n        </div>\n    )\n}\n\nexport default Popper\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/Login.js",["180"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/login/ProgressBar.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/register/Register.js",["181","182","183","184","185","186","187"],"import React, { Fragment, useEffect } from 'react'\nimport { Button, Checkbox, FormControlLabel, FormHelperText, makeStyles, Paper, TextField, Typography } from '@material-ui/core'\nimport ProgressBar from '../login/ProgressBar'\nimport axios from '../axios';\nimport { useHistory } from 'react-router-dom';\nimport RegisterSuccess from './RegisterSuccess';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        margin: 0,\n        height: '100vh',\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        background: 'radial-gradient(circle, rgba(255,245,157,1) 30%, rgba(102, 187, 106,1) 70%, rgba(46,46,46,1) 100%)'\n    },\n    paper: {\n        margin: 0,\n        padding: '2rem',\n        width: '30vw',\n        height: 'auto',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        '& > *': {\n            margin: theme.spacing(1)\n        },\n        [theme.breakpoints.down('md')]: {\n            width: '90%',\n          },\n    },\n    inputText: {\n        width: '70%',\n        [theme.breakpoints.down('md')]: {\n            width: '90%',\n          },\n    }, \n    header: {\n        margin: theme.spacing(1),\n        textAlign: 'center',\n        color: theme.palette.secondary.dark\n    },\n    statusInfo: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '3vh',\n        width: '100%'\n    }\n}))\n\nconst Register = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [registerForm, setForm]= React.useState({\n        login: {value: '', valid: true, validText: 'Login powinien mieć minimum 6 znaków'},\n        email: {value: '', valid: true, validText: 'Nieprawidłowy format adresu email'},\n        password: {value: '', valid: true, validText: 'Hasło powinno posiadać 1 wielką, 1 małą literę, 1 cyfrę i minimum 8 znaków'},\n        confirmPass: {value: '', valid: true, validText: 'Podane hasła nie są identyczne!'},\n    });\n    const [loading, setLoading] = React.useState(false);\n    const [registerText, setRegisterText] = React.useState(`Wypełnij dane rejestracyjne`);\n    const [registered, setRegistered] = React.useState(false);\n    const handleChange = (event) => {\n        setForm({ ...registerForm, [event.target.name]: {...registerForm[event.target.name], value: event.target.value}});\n    };\n\n    const validateInput = (input) => {\n        let regForm = {};\n        Object.assign(regForm, input);\n        let valid = true;\n        \n        for(let key of Object.keys(regForm)) {   \n            switch(key) {\n                case 'login': valid = /[0-9A-Za-z!@#$%^&*]{6,20}/.test(input.login.value);\n                break;\n                case 'email': valid = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(input.email.value);\n                break;\n                case 'password': valid = /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])[0-9A-Za-z!@#$%^&*]{8,20}$/.test(input.password.value);\n                break;\n                case 'confirmPass': valid = input.password.value === input.confirmPass.value;\n            }\n            regForm[key].valid = valid;\n            if(!valid) {\n                setRegisterText(regForm[key].validText);\n                break;\n            } \n        }     \n        if(valid) {\n            setRegisterText(`Sukces. Oczekuj na rejestrację`);\n        }\n        setForm(regForm);\n        return valid;\n    }\n\n    const register = () => {\n        setRegistered(true); return;\n        if(validateInput(registerForm)) {\n            setLoading(true);\n            let authorities = {\n                username: registerForm.login.value,\n                password: registerForm.password.value,\n                email: registerForm.email.value\n            }\n            axios.post('/register', authorities)\n            .then((res) => {\n                setLoading(false);\n                let defaultMessage = 'Zarejestrowano pomyślnie.';\n                switch(res.status) {\n                    case 200: setRegisterText( res.data && res.data.info && res.data.info.errorCode === 1 && res.data.info.message[0].error ? res.data.info.message[0].error : defaultMessage);\n                    break;\n                    case 201: {\n                        setRegisterText(res.data.info.data.token);\n                        setRegistered(true);\n                    }\n                    break;\n                    default: setRegisterText(defaultMessage); \n                }\n                console.log(res);\n                \n            })\n            .catch(err => {\n                let defaultMessage = 'Something went wrong. Try to register later.';\n                setLoading(false);\n                switch(err.status) {\n                    case 400: setRegisterText( err.data && err.data.info && err.data.info.message[0] ? err.data.info.message[0]: defaultMessage);\n                    break;\n                    default: setRegisterText(defaultMessage) \n                }\n                console.log(err);\n            })\n        }\n\n    }\n\n    return (\n        <form className={classes.root}>\n        <Paper elevation={20} className={classes.paper} > \n            {registered ? <RegisterSuccess login={registerForm.login.value}/> : <Fragment><Typography variant=\"h3\" className={classes.header}>Rejestracja</Typography>\n            <TextField\n                required\n                error={!registerForm.login.valid}\n                id=\"login\"\n                placeholder=\"min. 6 znaków\"\n                label=\"Login\"\n                type=\"login\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                name='login'\n                className={classes.inputText}\n                value={registerForm.login.value}\n                onChange={(event) => handleChange(event)}\n            />\n            <TextField\n                required\n                error={!registerForm.email.valid}\n                id=\"email\"\n                label=\"Email\"\n                type=\"email\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                name='email'\n                className={classes.inputText}\n                value={registerForm.email.value}\n                onChange={(event) => handleChange(event)}\n            />\n            <TextField\n                required\n                error={!registerForm.password.valid}\n                id=\"password\"\n                placeholder=\"8 znaków, 1 liczba, wielka i mała litera\"\n                label=\"Hasło\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                name='password'\n                className={classes.inputText}\n                value={registerForm.password.value}\n                onChange={(event) => handleChange(event)}\n            />\n            <TextField\n                required\n                error={!registerForm.confirmPass.valid}\n                id=\"confirmPass\"\n                label=\"Potwierdź hasło\"\n                type=\"password\"\n                autoComplete=\"current-password\"\n                variant=\"outlined\"\n                name=\"confirmPass\"\n                className={classes.inputText}\n                value={registerForm.confirmPass.value}\n                onChange={(event) => handleChange(event)}\n            />\n            <div className={classes.statusInfo}>\n                { loading ? <ProgressBar></ProgressBar> :  <FormHelperText>{registerText}</FormHelperText>}\n            </div>\n            <Button onClick={register} color=\"primary\" variant=\"outlined\" style={{width: '80%'}}>Zarejestruj</Button>\n            </Fragment>}\n        </Paper>\n    </form>\n    )\n}\n\nexport default Register\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/axios.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/components/scroll-to-top/ScrollToTop.js",["188"],"import React, {Fragment, useEffect} from 'react'\nimport {withRouter} from 'react-router-dom'\n\nconst ScrollToTop = ({history, children}) => {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            window.scrollTo(0,0)\n        });\n    return () => {\n        unlisten();\n    }}, [])\n\n    return(<Fragment>{children}</Fragment>)\n}\n\nexport default withRouter(ScrollToTop);","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/register/RegisterSuccess.js",["189"],"import React, {Fragment} from 'react';\nimport {Button, makeStyles, Typography} from '@material-ui/core'\nimport {useHistory} from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        textAlign: 'center',\n    },\n    header: {\n        marginBottom: theme.spacing(1)\n    },\n    text: {\n        textAlign:'left'\n    },\n    footer: {\n        marginTop: theme.spacing(1)\n    },\n    button: {\n        margin: theme.spacing(1),\n        width: '90%'\n    },\n    strong: {\n        textTransform: 'uppercase'\n    }\n}))\n\nconst RegisterSuccess = (props) => {\n    const classes = useStyles();\n    const history = useHistory();\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.header} variant=\"h3\">Rejestracja przebiegła pomyślnie!</Typography>\n            <Typography className={classes.text} varinat=\"h6\">Witaj na pokładzie <strong className={classes.strong}>{props.login}</strong> ! Aby móc korzystać z aplikacji musisz potwierdzić adres email. Powinieneś już mieć go w swojej skrzynce mailowej.</Typography>\n            <Button className={classes.button} variant=\"outlined\" onClick={() => (history.replace(\"/\"))}>OK</Button>\n            <Typography className={classes.footer} variant=\"h6\">Nie zapomnij sprawdzić spamu!</Typography>\n        </div>\n    )\n}\n\nexport default RegisterSuccess\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/home/Home.js",["190","191","192","193"],"import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, GridList, GridListTile, Typography } from '@material-ui/core';\nimport Hexagon from './Hexagon';\nimport classes2 from './Home.module.css'\nimport {useHistory} from 'react-router-dom'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between'\n    },\n    \n    content: {\n        margin: 0,\n        padding: '8rem',\n        paddingLeft: '8rem',\n        height: '100vh',\n        width: 'calc(100%-2rem)',\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems:'flex-start',\n        [theme.breakpoints.up('md')]: {\n            padding: '1rem',\n            paddingLeft: '4rem',\n          },\n        // alignIntems: 'center'\n    },\n    rightContent: {\n        padding: '1rem',\n    },\n    upper: {\n        height: '20vh',\n        marginLeft: '15rem',\n        maxWidth: '20%'\n    },\n    middle: {\n        height: '20vh',\n        marginLeft: '1rem',\n        width: '10%',\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems:'center'\n    },\n    lower: {\n        height: '20vh',\n        marginLeft: '15rem'\n    },\n    hexagonInput: {\n        width: \"100%\", \n        height: \"100%\", \n        display:\"flex\", \n        flexDirection: \"column\", \n        justifyContent: \"center\", \n        alignItems: \"center\"\n        ,\"&:hover, &:active\": {\n            textDecoration: 'underline'\n        }\n    }\n}));\n\nexport default function Home(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    return (\n        <div className={classes.root}>\n            <main className={classes.content}>\n                <div className={classes2.Top}>\n                    <div className={classes.hexagonInput} onClick={() => history.push(\"/login\")}>Login</div>\n                </div>\n                <div className={classes2.First}>\n                    <div className={classes.hexagonInput}>\n                        <Typography variant=\"h3\">Welcome in GPSY</Typography>\n                    </div>\n                </div>\n                <div className={classes2.Second} onClick={() => history.push(\"/register\")}>\n                <div className={classes.hexagonInput}>Rejestruj</div>\n                </div>\n                <div className={classes2.Bottom}>\n                    <div className={classes.hexagonInput}>About</div>\n                </div>\n            </main>\n            <div className={classes.rightContent}>\n                <Typography>Hello world</Typography>\n            </div>\n        </div>\n    )\n}\n",["194","195"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/home/Hexagon.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reducers/counter.js",[],["196","197"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reducers/isLogged.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/actions/index.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/reducers/index.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/grid/Grid.js",["198","199","200","201","202"],"import React, {useEffect} from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { GridList, GridListTile, Typography } from '@material-ui/core';\nimport CustomStepper from '../../../components/stepper/CustomStepper';\nimport PopularTable from '../table/PopularTable';\nimport Switcher from '../../../components/switcher/Switcher'\nimport HorizontalList from '../../../components/horizontalList/HorizontalList';\nimport Doughnut from '../../../components/chart/Doughnut';\nimport MainTable from '../table/MainTable';\nimport axios from '../../../axios';\nimport { useSelector } from 'react-redux';\nimport axiosToken from 'axios'\nconst cancelTokenSource = axiosToken.CancelToken.source()\n\nconst useStyles = makeStyles((theme) => ({\n    //grid\n    gridRoot: {\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        flexWrap: 'wrap',\n        justifyContent: 'space-around',\n        overflow: 'auto',\n        backgroundColor: theme.palette.background.paper,\n    },\n    gridList: {\n        width: '100%',\n        maxHeight: '100%',\n    },\n    gridTile: {\n        // border: '1px solid green',\n        display: 'flex',\n        width: '100%',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        // margin: theme.spacing(1),\n        padding: theme.spacing(1) ,\n        overflow: 'auto'\n    },\n    content: {\n        flexGrow: 1,\n        maxHeight: '80vh',\n        width: '80%'\n    },\n    typo: {\n        color: theme.palette.text.primary,\n        marginLeft: theme.spacing(1)\n    }\n}));\n\nexport default function Grid(props) {\n    const classes = useStyles();\n    const userMeta = useSelector(state => state.logged);\n    const [renderGpsyProposals, setRenderGpsyProposals] = React.useState(false);\n    const [gpsyProposals, setGpsyProposals] = React.useState([]);\n    const [renderSpotifyProposals, setRenderSpotifyProposals] = React.useState(false);\n    const [spotifyProposals, setSpotifyProposals] = React.useState([]);\n    const [genres, setGenres] = React.useState([]);\n\n    useEffect(() => {\n        axios.get('/gpsy/proposals?limit=20',\n            {headers: {\n                Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n            }},\n            {\n                cancelToken: cancelTokenSource.token\n            }\n            )\n        .then(data => {\n            let newRows = [];\n            for(let el of data.data.info.data) {\n                newRows.push({spotifyTrackId: el.trackId, name: el.name, author: el.author})\n            }\n            setGpsyProposals(newRows);\n            setRenderGpsyProposals(true);\n        })\n        .catch(err => {\n            console.log(err)\n        })\n\n        axios.get('/spotify/proposals?limit=20',\n            {headers: {\n                Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n            }},\n            {\n                cancelToken: cancelTokenSource.token\n            }\n            )\n        .then(data => {\n            let newRows = [];\n            for(let el of data.data.info.data) {\n                newRows.push({spotifyTrackId: el.trackId, name: el.name, author: el.author})\n            }\n            setSpotifyProposals(newRows);\n            setRenderSpotifyProposals(true);\n            })\n        .catch(err => {\n            console.log(err)\n        })\n\n        axios.get('/gpsy/user/genres',\n            {headers: {\n                Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n            }},\n            {\n                cancelToken: cancelTokenSource.token\n            }\n            )\n        .then(data => {\n            let newRows = [];\n            for(let el of data.data.info.data.genres) {\n                newRows.push({name: el.name, percent: el.popularityPercent})\n            }\n            setGenres(newRows);\n            })\n        .catch(err => {\n            console.log(err)\n        })\n        \n        return () => {\n            cancelTokenSource.cancel();\n        }\n    }, [userMeta])\n\n    return (\n        <main className={classes.content}>\n            <div className={classes.gridRoot}>\n                <GridList cellHeight={80} className={classes.gridList} cols={3}>\n                    <GridListTile cols={3} rows={2} className={classes.gridTile}> \n                        <Typography variant=\"h5\" className={classes.typo}>Rekomendowane przez Gpsy</Typography>\n                        <HorizontalList items={gpsyProposals}></HorizontalList>\n                    </GridListTile>\n                    <GridListTile cols={1} rows={8} className={classes.gridTile}>\n                        <Typography variant=\"h5\" className={classes.typo}>Moje gatunki</Typography>\n                        <Doughnut data={genres}></Doughnut>\n                    </GridListTile>\n                    <GridListTile cols={2} rows={8} className={classes.gridTile}>\n                        <MainTable></MainTable>\n                    </GridListTile>\n                    <GridListTile cols={3} rows={2} className={classes.gridTile}>\n                        <Typography variant=\"h5\" className={classes.typo}>Rekomendowane przez spotify</Typography>\n                        <HorizontalList items={spotifyProposals}></HorizontalList>\n                    </GridListTile>\n                    <GridListTile cols={1} className={classes.gridTile}> <p>Hello world</p>\n                    </GridListTile>\n                    <GridListTile cols={1} className={classes.gridTile}> <p>Hello world</p>\n                    </GridListTile>\n                </GridList>\n            </div>\n        </main>\n    )\n}\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/Dashboard.js",["203","204","205"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/MainTable.js",[],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/PopularTable.js",["206","207"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { useSelector } from 'react-redux';\nimport axiosToken from 'axios'\nimport axios from '../../../axios'\n\nfunction createData(name, author, lastPlayed, popularity) {\n  return { name,author, lastPlayed, popularity };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Nazwa' },\n  { id: 'author', numeric: false, disablePadding: false, label: 'Autor' },\n  { id: 'lastPlayed', numeric: false, disablePadding: false, label: 'Data i czas' },\n  { id: 'popularity', numeric: false, disablePadding: false, label: 'Odtworzono ogółem' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort,  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  let headerCells = headCells;\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headerCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'none'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            \n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              \n            >\n              <p style={{width: headCell.id === 'popularity' ? '5rem' : '6rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}</p>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} zaznaczone\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Ostatnio Odtwarzane\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        null\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    height: '90%',\n    display: 'block',\n    textAlign: 'center',\n    margin: theme.spacing(1)\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function PopularTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const userMeta = useSelector(state => state.logged);\n  const cancelTokenSource = axiosToken.CancelToken.source()\n  const [render, setRender] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n  \n  React.useEffect(() => {\n    axios.get('/gpsy/popular?limit=20',\n    {headers: {\n      Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n    }},\n    {\n      cancelToken: cancelTokenSource.token\n    }\n    )\n    .then(data => {\n      let newRows = [];\n      for(let el of data.data.info.data.popularTracks) {\n        newRows.push(createData(el.name, el.author, el.recentlyPlayed.replace(/[ZT]/g, ' ').slice(0,19) ,el.popularity))   \n      }\n      setRows(newRows);\n      setRender(true);\n      console.log(rows);\n    })\n    .catch(err => {\n      console.log(err)\n    })\n    return () => {\n      cancelTokenSource.cancel();\n    }\n  }, [userMeta])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      props.setSelected(newSelecteds);\n      return;\n    }\n    props.setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = props.selectedPopular.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(props.selectedPopular, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(props.selectedPopular.slice(1));\n    } else if (selectedIndex === props.selectedPopular.length - 1) {\n      newSelected = newSelected.concat(props.selectedPopular.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        props.selectedPopular.slice(0, selectedIndex),\n        props.selectedPopular.slice(selectedIndex + 1),\n      );\n    }\n\n    props.setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => props.selectedPopular.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const trackTable = (        \n      <TableContainer style={{overflow: 'auto', height: '80%'}}>\n      {render ? <Table\n        className={classes.table}\n        aria-labelledby=\"tableTitle\"\n        size='small'\n        aria-label=\"enhanced table\"\n        stickyHeader\n        style={{tableLayout: 'auto'}}\n      >\n        <EnhancedTableHead\n          classes={classes}\n          numSelected={props.selectedPopular.length}\n          order={order}\n          orderBy={orderBy}\n          onSelectAllClick={handleSelectAllClick}\n          onRequestSort={handleRequestSort}\n          rowCount={rows.length}\n        />\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n\n              return (\n                <TableRow\n                  hover\n                  onClick={(event) => handleClick(event, row.name)}\n                  role=\"checkbox\"\n                  aria-checked={isItemSelected}\n                  tabIndex={-1}\n                  key={row.name}\n                  selected={isItemSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={isItemSelected}\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </TableCell>\n                  <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                    <p style={{width: '12rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.name}</p>\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '10rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.author}</p></TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '9rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.lastPlayed}</p></TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '2rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.popularity}</p></TableCell>\n                </TableRow>\n              );\n            })}\n          {emptyRows > 0 && (\n            <TableRow >\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table> : null}\n    </TableContainer>)\n\n  return (\n      <Paper elevation={8} className={classes.paper}>\n        {trackTable}\n        <TablePagination\n          rowsPerPageOptions={[5, 6,7,8,9, 10,15,20]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n  );\n}\n",["208","209"],"/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/RecentTracksTable.js",["210","211"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { useSelector } from 'react-redux';\nimport axiosToken from 'axios'\nimport axios from '../../../axios'\n\nfunction createData(name, author, lastPlayed, popularity) {\n  return { name,author, lastPlayed, popularity };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Nazwa' },\n  { id: 'author', numeric: false, disablePadding: false, label: 'Autor' },\n  { id: 'recentlyPlayed', numeric: false, disablePadding: false, label: 'Data i czas' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort,  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  let headerCells = headCells;\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headerCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'none'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            \n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              \n            >\n              <p style={{width: headCell.id === 'popularity' ? '5rem' : '6rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}</p>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} zaznaczone\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Ostatnio Odtwarzane\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        null\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    height: '90%',\n    display: 'block',\n    textAlign: 'center',\n    margin: theme.spacing(1)\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function RecentTracksTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const userMeta = useSelector(state => state.logged);\n  const cancelTokenSource = axiosToken.CancelToken.source()\n  const [render, setRender] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n  \n  React.useEffect(() => {\n    axios.get('/gpsy/recent?limit=20',\n    {headers: {\n      Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n    }},\n    {\n      cancelToken: cancelTokenSource.token\n    }\n    )\n    .then(data => {\n      let newRows = [];\n      for(let el of data.data.info.data.recentTracks) {\n        newRows.push(createData(el.name, el.author, el.playedAt.replace(/[ZT]/g, ' ').slice(0,19)))   \n      }\n      setRows(newRows);\n      setRender(true);\n      console.log(rows);\n    })\n    .catch(err => {\n      console.log(err)\n    })\n    return () => {\n      cancelTokenSource.cancel();\n    }\n  }, [userMeta])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      props.setSelected(newSelecteds);\n      return;\n    }\n    props.setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = props.selectedRecent.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(props.selectedRecent, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(props.selectedRecent.slice(1));\n    } else if (selectedIndex === props.selectedRecent.length - 1) {\n      newSelected = newSelected.concat(props.selectedRecent.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        props.selectedRecent.slice(0, selectedIndex),\n        props.selectedRecent.slice(selectedIndex + 1),\n      );\n    }\n\n    props.setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => props.selectedRecent.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const trackTable = (        \n      <TableContainer style={{overflow: 'auto', height: '80%'}}>\n      {render ? <Table\n        className={classes.table}\n        aria-labelledby=\"tableTitle\"\n        size='small'\n        aria-label=\"enhanced table\"\n        stickyHeader\n        style={{tableLayout: 'auto'}}\n      >\n        <EnhancedTableHead\n          classes={classes}\n          numSelected={props.selectedRecent.length}\n          order={order}\n          orderBy={orderBy}\n          onSelectAllClick={handleSelectAllClick}\n          onRequestSort={handleRequestSort}\n          rowCount={rows.length}\n        />\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n\n              return (\n                <TableRow\n                  hover\n                  onClick={(event) => handleClick(event, row.name)}\n                  role=\"checkbox\"\n                  aria-checked={isItemSelected}\n                  tabIndex={-1}\n                  key={row.name}\n                  selected={isItemSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={isItemSelected}\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </TableCell>\n                  <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                    <p style={{width: '12rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.name}</p>\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '10rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.author}</p></TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '9rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.lastPlayed}</p></TableCell>\n                </TableRow>\n              );\n            })}\n          {emptyRows > 0 && (\n            <TableRow >\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table> : null}\n    </TableContainer>)\n\n  return (\n      <Paper elevation={8} className={classes.paper}>\n        {trackTable}\n        <TablePagination\n          rowsPerPageOptions={[5, 6,7,8,9, 10,15,20]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n  );\n}\n","/home/daniel/Desktop/JSLearn/gpsy/gpsy/ui/src/dashboard/tracks/table/RaisingTracksTable.js",["212","213"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport { useSelector } from 'react-redux';\nimport axiosToken from 'axios'\nimport axios from '../../../axios'\n\nfunction createData(name, author, lastPlayed, popularity) {\n  return { name,author, lastPlayed, popularity };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'name', numeric: false, disablePadding: true, label: 'Nazwa' },\n  { id: 'author', numeric: false, disablePadding: false, label: 'Autor' },\n  { id: 'lastPlayed', numeric: false, disablePadding: false, label: 'Data i czas' },\n  { id: 'popularity', numeric: false, disablePadding: false, label: 'Odtworzono ogółem' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort,  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  let headerCells = headCells;\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headerCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n            padding={headCell.disablePadding ? 'none' : 'none'}\n            sortDirection={orderBy === headCell.id ? order : false}\n            \n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n              \n            >\n              <p style={{width: headCell.id === 'popularity' ? '5rem' : '6rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}</p>\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(3),\n    paddingRight: theme.spacing(3),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} zaznaczone\n        </Typography>\n      ) : (\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Ostatnio Odtwarzane\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        null\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    width: 'auto',\n    height: '90%',\n    display: 'block',\n    textAlign: 'center',\n    margin: theme.spacing(1)\n  },\n  table: {\n    minWidth: 550,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function RaisingTracksTable(props) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('calories');\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(8);\n  const userMeta = useSelector(state => state.logged);\n  const cancelTokenSource = axiosToken.CancelToken.source()\n  const [render, setRender] = React.useState(false);\n  const [rows, setRows] = React.useState([]);\n  \n  React.useEffect(() => {\n    axios.get('/gpsy/raising?limit=20',\n    {headers: {\n      Authorization: 'Bearer ' + userMeta.token //the token is a variable which holds the token\n    }},\n    {\n      cancelToken: cancelTokenSource.token\n    }\n    )\n    .then(data => {\n      let newRows = [];\n      for(let el of data.data.info.data.raisingTracks) {\n        newRows.push(createData(el.name, el.author, el.recentlyPlayed.replace(/[ZT]/g, ' ').slice(0,19) ,el.popularity))   \n      }\n      setRows(newRows);\n      setRender(true);\n      console.log(rows);\n    })\n    .catch(err => {\n      console.log(err)\n    })\n    return () => {\n      cancelTokenSource.cancel();\n    }\n  }, [userMeta])\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.name);\n      props.setSelected(newSelecteds);\n      return;\n    }\n    props.setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = props.selectedRaising.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(props.selectedRaising, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(props.selectedRaising.slice(1));\n    } else if (selectedIndex === props.selectedRaising.length - 1) {\n      newSelected = newSelected.concat(props.selectedRaising.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        props.selectedRaising.slice(0, selectedIndex),\n        props.selectedRaising.slice(selectedIndex + 1),\n      );\n    }\n\n    props.setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => props.selectedRaising.indexOf(name) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  const trackTable = (        \n      <TableContainer style={{overflow: 'auto', height: '80%'}}>\n      {render ? <Table\n        className={classes.table}\n        aria-labelledby=\"tableTitle\"\n        size='small'\n        aria-label=\"enhanced table\"\n        stickyHeader\n        style={{tableLayout: 'auto'}}\n      >\n        <EnhancedTableHead\n          classes={classes}\n          numSelected={props.selectedRaising.length}\n          order={order}\n          orderBy={orderBy}\n          onSelectAllClick={handleSelectAllClick}\n          onRequestSort={handleRequestSort}\n          rowCount={rows.length}\n        />\n        <TableBody>\n          {stableSort(rows, getComparator(order, orderBy))\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((row, index) => {\n              const isItemSelected = isSelected(row.name);\n              const labelId = `enhanced-table-checkbox-${index}`;\n\n              return (\n                <TableRow\n                  hover\n                  onClick={(event) => handleClick(event, row.name)}\n                  role=\"checkbox\"\n                  aria-checked={isItemSelected}\n                  tabIndex={-1}\n                  key={row.name}\n                  selected={isItemSelected}\n                >\n                  <TableCell padding=\"checkbox\">\n                    <Checkbox\n                      checked={isItemSelected}\n                      inputProps={{ 'aria-labelledby': labelId }}\n                    />\n                  </TableCell>\n                  <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                    <p style={{width: '12rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.name}</p>\n                  </TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '10rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.author}</p></TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '9rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.lastPlayed}</p></TableCell>\n                  <TableCell padding=\"none\" align=\"left\"><p style={{width: '2rem', overflowX: 'wrap', wordWrap: 'break-word'}}>{row.popularity}</p></TableCell>\n                </TableRow>\n              );\n            })}\n          {emptyRows > 0 && (\n            <TableRow >\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table> : null}\n    </TableContainer>)\n\n  return (\n      <Paper elevation={8} className={classes.paper}>\n        {trackTable}\n        <TablePagination\n          rowsPerPageOptions={[5, 6,7,8,9, 10,15,20]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n  );\n}\n",{"ruleId":"214","replacedBy":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","severity":1,"message":"219","line":7,"column":10,"nodeType":"220","messageId":"221","endLine":7,"endColumn":15},{"ruleId":"214","replacedBy":"222"},{"ruleId":"216","replacedBy":"223"},{"ruleId":"218","severity":1,"message":"224","line":4,"column":22,"nodeType":"220","messageId":"221","endLine":4,"endColumn":32},{"ruleId":"214","replacedBy":"225"},{"ruleId":"216","replacedBy":"226"},{"ruleId":"214","replacedBy":"227"},{"ruleId":"216","replacedBy":"228"},{"ruleId":"218","severity":1,"message":"229","line":17,"column":8,"nodeType":"220","messageId":"221","endLine":17,"endColumn":12},{"ruleId":"230","severity":1,"message":"231","line":91,"column":6,"nodeType":"232","endLine":91,"endColumn":16,"suggestions":"233"},{"ruleId":"214","replacedBy":"234"},{"ruleId":"216","replacedBy":"235"},{"ruleId":"218","severity":1,"message":"236","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":19},{"ruleId":"218","severity":1,"message":"237","line":17,"column":28,"nodeType":"220","messageId":"221","endLine":17,"endColumn":36},{"ruleId":"218","severity":1,"message":"238","line":92,"column":12,"nodeType":"220","messageId":"221","endLine":92,"endColumn":18},{"ruleId":"218","severity":1,"message":"239","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":18},{"ruleId":"218","severity":1,"message":"240","line":7,"column":10,"nodeType":"220","messageId":"221","endLine":7,"endColumn":20},{"ruleId":"218","severity":1,"message":"241","line":7,"column":22,"nodeType":"220","messageId":"221","endLine":7,"endColumn":29},{"ruleId":"218","severity":1,"message":"237","line":3,"column":22,"nodeType":"220","messageId":"221","endLine":3,"endColumn":30},{"ruleId":"218","severity":1,"message":"242","line":4,"column":10,"nodeType":"220","messageId":"221","endLine":4,"endColumn":20},{"ruleId":"218","severity":1,"message":"243","line":1,"column":10,"nodeType":"220","messageId":"221","endLine":1,"endColumn":16},{"ruleId":"218","severity":1,"message":"244","line":1,"column":18,"nodeType":"220","messageId":"221","endLine":1,"endColumn":21},{"ruleId":"218","severity":1,"message":"245","line":1,"column":30,"nodeType":"220","messageId":"221","endLine":1,"endColumn":37},{"ruleId":"218","severity":1,"message":"241","line":1,"column":39,"nodeType":"220","messageId":"221","endLine":1,"endColumn":46},{"ruleId":"218","severity":1,"message":"246","line":2,"column":8,"nodeType":"220","messageId":"221","endLine":2,"endColumn":15},{"ruleId":"218","severity":1,"message":"237","line":4,"column":22,"nodeType":"220","messageId":"221","endLine":4,"endColumn":30},{"ruleId":"214","replacedBy":"247"},{"ruleId":"216","replacedBy":"248"},{"ruleId":"230","severity":1,"message":"249","line":22,"column":20,"nodeType":"250","endLine":97,"endColumn":11},{"ruleId":"218","severity":1,"message":"251","line":2,"column":108,"nodeType":"220","messageId":"221","endLine":2,"endColumn":113},{"ruleId":"218","severity":1,"message":"252","line":115,"column":12,"nodeType":"220","messageId":"221","endLine":115,"endColumn":19},{"ruleId":"218","severity":1,"message":"253","line":115,"column":21,"nodeType":"220","messageId":"221","endLine":115,"endColumn":31},{"ruleId":"218","severity":1,"message":"254","line":51,"column":19,"nodeType":"220","messageId":"221","endLine":51,"endColumn":27},{"ruleId":"218","severity":1,"message":"255","line":1,"column":27,"nodeType":"220","messageId":"221","endLine":1,"endColumn":36},{"ruleId":"218","severity":1,"message":"256","line":2,"column":18,"nodeType":"220","messageId":"221","endLine":2,"endColumn":26},{"ruleId":"218","severity":1,"message":"257","line":2,"column":28,"nodeType":"220","messageId":"221","endLine":2,"endColumn":44},{"ruleId":"218","severity":1,"message":"258","line":57,"column":11,"nodeType":"220","messageId":"221","endLine":57,"endColumn":18},{"ruleId":"259","severity":1,"message":"260","line":77,"column":13,"nodeType":"261","messageId":"262","endLine":85,"endColumn":14},{"ruleId":"263","severity":1,"message":"264","line":101,"column":9,"nodeType":"265","messageId":"266","endLine":135,"endColumn":10},{"ruleId":"267","severity":1,"message":"268","line":115,"column":31,"nodeType":"269","messageId":"270","endLine":118,"endColumn":22},{"ruleId":"230","severity":1,"message":"271","line":11,"column":9,"nodeType":"232","endLine":11,"endColumn":11,"suggestions":"272"},{"ruleId":"218","severity":1,"message":"273","line":1,"column":16,"nodeType":"220","messageId":"221","endLine":1,"endColumn":24},{"ruleId":"218","severity":1,"message":"243","line":3,"column":10,"nodeType":"220","messageId":"221","endLine":3,"endColumn":16},{"ruleId":"218","severity":1,"message":"274","line":3,"column":18,"nodeType":"220","messageId":"221","endLine":3,"endColumn":26},{"ruleId":"218","severity":1,"message":"275","line":3,"column":28,"nodeType":"220","messageId":"221","endLine":3,"endColumn":40},{"ruleId":"218","severity":1,"message":"276","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":15},{"ruleId":"214","replacedBy":"277"},{"ruleId":"216","replacedBy":"278"},{"ruleId":"214","replacedBy":"279"},{"ruleId":"216","replacedBy":"280"},{"ruleId":"218","severity":1,"message":"281","line":4,"column":8,"nodeType":"220","messageId":"221","endLine":4,"endColumn":21},{"ruleId":"218","severity":1,"message":"282","line":5,"column":8,"nodeType":"220","messageId":"221","endLine":5,"endColumn":20},{"ruleId":"218","severity":1,"message":"283","line":6,"column":8,"nodeType":"220","messageId":"221","endLine":6,"endColumn":16},{"ruleId":"218","severity":1,"message":"284","line":53,"column":12,"nodeType":"220","messageId":"221","endLine":53,"endColumn":31},{"ruleId":"218","severity":1,"message":"285","line":55,"column":12,"nodeType":"220","messageId":"221","endLine":55,"endColumn":34},{"ruleId":"218","severity":1,"message":"286","line":2,"column":10,"nodeType":"220","messageId":"221","endLine":2,"endColumn":14},{"ruleId":"218","severity":1,"message":"237","line":2,"column":28,"nodeType":"220","messageId":"221","endLine":2,"endColumn":36},{"ruleId":"218","severity":1,"message":"287","line":24,"column":9,"nodeType":"220","messageId":"221","endLine":24,"endColumn":13},{"ruleId":"218","severity":1,"message":"288","line":20,"column":8,"nodeType":"220","messageId":"221","endLine":20,"endColumn":22},{"ruleId":"230","severity":1,"message":"289","line":234,"column":6,"nodeType":"232","endLine":234,"endColumn":16,"suggestions":"290"},{"ruleId":"214","replacedBy":"291"},{"ruleId":"216","replacedBy":"292"},{"ruleId":"218","severity":1,"message":"288","line":20,"column":8,"nodeType":"220","messageId":"221","endLine":20,"endColumn":22},{"ruleId":"230","severity":1,"message":"289","line":233,"column":6,"nodeType":"232","endLine":233,"endColumn":16,"suggestions":"293"},{"ruleId":"218","severity":1,"message":"288","line":20,"column":8,"nodeType":"220","messageId":"221","endLine":20,"endColumn":22},{"ruleId":"230","severity":1,"message":"289","line":234,"column":6,"nodeType":"232","endLine":234,"endColumn":16,"suggestions":"294"},"no-native-reassign",["295"],"no-negated-in-lhs",["296"],"no-unused-vars","'brown' is defined but never used.","Identifier","unusedVar",["295"],["296"],"'deepPurple' is defined but never used.",["295"],["296"],["295"],["296"],"'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cancelTokenSource'. Either include it or remove the dependency array.","ArrayExpression",["297"],["295"],["296"],"'CssBaseline' is defined but never used.","'useTheme' is defined but never used.","'window' is assigned a value but never used.","'DeleteIcon' is defined but never used.","'IconButton' is defined but never used.","'Tooltip' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'Fab' is defined but never used.","'Popover' is defined but never used.","'AddIcon' is defined but never used.",["295"],["296"],"Assignments to the 'doughnut' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","NewExpression","'Paper' is defined but never used.","'content' is assigned a value but never used.","'setContent' is assigned a value but never used.","'setState' is assigned a value but never used.","'useEffect' is defined but never used.","'Checkbox' is defined but never used.","'FormControlLabel' is defined but never used.","'history' is assigned a value but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","IfStatement","unreachableCode","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["298"],"'Fragment' is defined but never used.","'GridList' is defined but never used.","'GridListTile' is defined but never used.","'Hexagon' is defined but never used.",["295"],["296"],["295"],["296"],"'CustomStepper' is defined but never used.","'PopularTable' is defined but never used.","'Switcher' is defined but never used.","'renderGpsyProposals' is assigned a value but never used.","'renderSpotifyProposals' is assigned a value but never used.","'fade' is defined but never used.","'user' is assigned a value but never used.","'FilterListIcon' is defined but never used.","React Hook React.useEffect has missing dependencies: 'cancelTokenSource' and 'rows'. Either include them or remove the dependency array.",["299"],["295"],["296"],["300"],["301"],"no-global-assign","no-unsafe-negation",{"desc":"302","fix":"303"},{"desc":"304","fix":"305"},{"desc":"306","fix":"307"},{"desc":"306","fix":"308"},{"desc":"306","fix":"309"},"Update the dependencies array to be: [cancelTokenSource, userMeta]",{"range":"310","text":"311"},"Update the dependencies array to be: [history]",{"range":"312","text":"313"},"Update the dependencies array to be: [cancelTokenSource, rows, userMeta]",{"range":"314","text":"315"},{"range":"316","text":"315"},{"range":"317","text":"315"},[2683,2693],"[cancelTokenSource, userMeta]",[303,305],"[history]",[7197,7207],"[cancelTokenSource, rows, userMeta]",[7092,7102],[7203,7213]]